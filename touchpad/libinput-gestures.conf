# Configuration file for libinput-gestures.
gesture swipe up	  xdotool key super+shift+j
gesture swipe down	  xdotool key super+shift+k
gesture swipe left	  xdotool key super+shift+h
gesture swipe right	  xdotool key super+shift+l

gesture swipe left_up     xdotool key super+s
gesture swipe right_up    xdotool key super+d
gesture swipe left_down   xdotool key super+w
gesture swipe right_down  xdotool key super+a

# NOTE: If you don't use "natural" scrolling direction for your touchpad
# then you may want to swap the above default left/right and up/down
# configurations.

# Optional extended swipe gestures, e.g. for browser tab navigation:
#
# Jump to next open browser tab
# gesture swipe right_up xdotool key control+Tab
#
# ptional extended swipe gestures, e.g. for browser tab navigation:
#
# Jump to next open browser tab
# gesture swipe right_up xdotool key control+Tab
#
# Jump to previous open browser tab
#
# Close current browser tab
# gesture swipe left_down xdotool key control+w
#
# Reopen and jump to last closed browser tab
# gesture swipe right_down xdotool key control+shift+t

# Example of 8 static workspaces, e.g. using KDE virtual-desktops,
# arranged in 2 rows of 4 across using swipe up/down/left/right to
# navigate in fixed planes. Must match how you have configured your
# virtual desktops.
# gesture swipe up      _internal --col=2 ws_up
# gesture swipe down    _internal --col=2 ws_down
# gesture swipe left    _internal --row=4 ws_up
# gesture swipe right   _internal --row=4 ws_down

# Example virtual desktop switching for Ubuntu Unity/Compiz. The


# Optional extended swipe gestures, e.g. for browser tab navigation:
#
# Jump to next open browser tab
# gesture swipe right_up xdotool key control+Tab
#
# Jump to previous open browser tab
# gesture swipe left_up xdotool key control+shift+Tab
#
# Close current browser tab
# gesture swipe left_down xdotool key control+w
#
# Reopen and jump to last closed browser tab
# gesture swipe right_down xdotool key control+shift+t

# Example of 8 static workspaces, e.g. using KDE virtual-desktops,
# arranged in 2 rows of 4 across using swipe up/down/left/right to
# navigate in fixed planes. Must match how you have configured your
# virtual desktops.
# gesture swipe up      _internal --col=2 ws_up
# gesture swipe down    _internal --col=2 ws_down
# gesture swipe left    _internal --row=4 ws_up
# gesture swipe right   _internal --row=4 ws_down

# Example virtual desktop switching for Ubuntu Unity/Compiz. The

# Jump to previous open browser tab
# gesture swipe left_up xdotool key control+shift+Tab
#
# Close current browser tab
# gesture swipe left_down xdotool key control+w
#
# Reopen and jump to last closed browser tab
# gesture swipe right_down xdotool key control+shift+t

# Example of 8 static workspaces, e.g. using KDE virtual-desktops,
# arranged in 2 rows of 4 across using swipe up/down/left/right to
# navigate in fixed planes. Must match how you have configured your
# virtual desktops.
# gesture swipe up	_internal --col=2 ws_up
# gesture swipe down	_internal --col=2 ws_down
# gesture swipe left	_internal --row=4 ws_up
# gesture swipe right	_internal --row=4 ws_down

# Example virtual desktop switching for Ubuntu Unity/Compiz. The
# _internal command does not work for Compiz but you can explicitly
# configure the swipe commands to work for a Compiz virtual 2
# dimensional desktop as follows:
# gesture swipe up	xdotool key ctrl+alt+Up
# gesture swipe down	xdotool key ctrl+alt+Down
# gesture swipe left	xdotool key ctrl+alt+Left
# gesture swipe right	xdotool key ctrl+alt+Right

# GNOME SHELL open/close overview (works for GNOME on Wayland and Xorg)
gesture pinch in xdotool do key super+s
gesture pinch out xdotool do key super+s

#
# Jump to next open browser tab
# gesture swipe right_up xdotool key control+Tab
#
# Jump to previous open browser tab
# gesture swipe left_up xdotool key control+shift+Tab
#
# Close current browser tab
# gesture swipe left_down xdotool key control+w
#
# Reopen and jump to last closed browser tab
# gesture swipe right_down xdotool key control+shift+t

# Example of 8 static workspaces, e.g. using KDE virtual-desktops,
# arranged in 2 rows of 4 across using swipe up/down/left/right to
# navigate in fixed planes. Must match how you have configured your
# virtual desktops.
# gesture swipe up      _internal --col=2 ws_up
# gesture swipe down    _internal --col=2 ws_down
# gesture swipe left    _internal --row=4 ws_up
# gesture swipe right   _internal --row=4 ws_down

# Example virtual desktop switching for Ubuntu Unity/Compiz. The


# Optional extended pinch gestures:
# gesture pinch clockwise <whatever command>
# gesture pinch anticlockwise <whatever command>

# This application normally determines your touchpad device
# automatically. Some users may have multiple touchpads but by default
# we use only the first one found. However, you can choose to specify
# the explicit device name to use. Run "libinput list-devices" to work
# out the name of your device (from the "Device:" field). Then add a
# device line specifying that name, e.g:
#
# device DLL0665:01 06CB:76AD Touchpad
#
# If the device name starts with a '/' then it is instead considered as
# the explicit device path although since device paths can change
# through reboots this is best to be a symlink. E.g. instead of specifying
# /dev/input/event12, use the corresponding full path link under
# /dev/input/by-path/*.
#
# You can choose to use ALL touchpad devices by setting the device name
# to "all". This reduces performance slightly so only set this if you
# need to.
#
# device all
